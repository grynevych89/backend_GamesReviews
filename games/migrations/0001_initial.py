# Generated by Django 5.2.4 on 2025-07-20 13:45

import ckeditor.fields
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Назва категорії, напр. Action, RPG', max_length=100, unique=True, verbose_name='Category Name')),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(help_text='Питання', max_length=255, verbose_name='Question')),
                ('answer', models.TextField(help_text='Відповідь', verbose_name='Answer')),
            ],
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(help_text='Питання опитування', max_length=255, verbose_name='Poll Question')),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Назва гри', max_length=255, verbose_name='Game Title')),
                ('slug', models.SlugField(help_text='Автоматично генерується зі заголовка', unique=True, verbose_name='Slug')),
                ('steam_id', models.CharField(blank=True, help_text='Steam ID (для парсингу)', max_length=50, null=True, verbose_name='Steam ID')),
                ('is_active', models.BooleanField(default=True, help_text='Якщо вимкнено — гра не показується на сайті', verbose_name='Is Active?')),
                ('developer', models.CharField(blank=True, help_text='Розробник', max_length=255, verbose_name='Developer')),
                ('publisher', models.CharField(blank=True, help_text='Видавець', max_length=255, verbose_name='Publisher')),
                ('logo_file', models.ImageField(blank=True, help_text='Завантаження логотипу вручну', null=True, upload_to='logos/', verbose_name='Local Logo')),
                ('logo_url', models.URLField(blank=True, help_text='Посилання на логотип із парсингу', null=True, verbose_name='Logo URL')),
                ('rating_manual', models.DecimalField(decimal_places=1, help_text='Оцінка вручну (0–5)', max_digits=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Manual Rating')),
                ('rating_external', models.DecimalField(blank=True, decimal_places=1, help_text='Оцінка з інших сервісів', max_digits=2, null=True, verbose_name='External Rating')),
                ('review_headline', models.CharField(help_text='Заголовок огляду', max_length=255, verbose_name='Review Headline (H1)')),
                ('review_body', ckeditor.fields.RichTextField(help_text='HTML-огляд: H2-H4, списки, картинки 100% ширини', verbose_name='Review Body')),
                ('pros', models.TextField(blank=True, help_text='Переваги — по одному в рядок (натискай Enter після кожного)', verbose_name='Pros')),
                ('cons', models.TextField(blank=True, help_text='Недоліки — по одному в рядок (натискай Enter після кожного)', verbose_name='Cons')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('categories', models.ManyToManyField(help_text='Оберіть одну або кілька категорій', related_name='games', to='games.category', verbose_name='Categories')),
                ('faqs', models.ManyToManyField(blank=True, help_text='Оберіть або створіть питання FAQ для гри', related_name='games', to='games.faq')),
                ('polls', models.ManyToManyField(blank=True, help_text="Оберіть опитування, які пов'язані з цією грою", related_name='games', to='games.poll')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ім’я користувача', max_length=100, verbose_name='Name')),
                ('email', models.EmailField(help_text='Email користувача (не публікується)', max_length=254, verbose_name='Email')),
                ('text', models.TextField(help_text='Текст коментаря', verbose_name='Comment Text')),
                ('is_approved', models.BooleanField(default=False, help_text='...', verbose_name='Approved')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='games.game')),
            ],
        ),
        migrations.CreateModel(
            name='PollOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(help_text='Варіант відповіді', max_length=100, verbose_name='Option Text')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='games.poll')),
            ],
        ),
        migrations.CreateModel(
            name='Screenshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_file', models.ImageField(blank=True, null=True, upload_to='screenshots/', verbose_name='Local Screenshot')),
                ('image_url', models.URLField(blank=True, null=True, verbose_name='Screenshot URL')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screenshots', to='games.game')),
            ],
        ),
    ]
